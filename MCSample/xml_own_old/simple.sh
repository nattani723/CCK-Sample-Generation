#!/bin/sh
#

# simple job wrapper
# Automatically generated by:
#          /opt/jobsub_lite/bin/jobsub_submit --group=uboone --role=Analysis --tar_file_name dropbox:///tmp/tmpC60MmT/workd97470c1-f734-4789-9b5d-b4ac5f5c7b42.tar --resource-provides=usage_model=DEDICATED,OPPORTUNISTIC,OFFSITE --disk=20GB --memory=2000 --lines=+SingularityImage="/cvmfs/singularity.opensciencegrid.org/fermilab/fnal-wn-sl7:latest" -N 10 --expected-lifetime=24h --append_condor_requirements=(TARGET.HAS_CVMFS_uboone_opensciencegrid_org==true)&&(TARGET.HAS_CVMFS_larsoft_opensciencegrid_org==true) --append_condor_requirements=(TARGET.HAS_CVMFS_uboone_opensciencegrid_org==true) --append_condor_requirements=(TARGET.HAS_CVMFS_uboone_osgstorage_org==true) --append_condor_requirements=(TARGET.HAS_SINGULARITY=?=true) file:///tmp/tmpvBPdzn/gen-make_kaon_events_numi_fhc_run1_assok_overlay_deftest2-v08_00_00_51.sh --nfile 1  --group uboone  -g  -c wrapper.fcl  --ups uboonecode  -r v08_00_00_51  -b e17:prof  --localtar /pnfs/uboone/resilient/users/taniuchi/KaonProduction/tarballs/Kaon_v08_00_00_51.tar  --workdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/workdir  --outdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/outdir  --logdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/logdir  --os SL7  -n 2000  --njobs 10 --data_file_type root  --output make_kaon_events_numi_fhc_run1_assok_overlay_deftest2_${PROCESS}_%tc_g4.root  --init /cvmfs/uboone.opensciencegrid.org/products/setup_uboone.sh  --validate  --declare  --copy

umask 002


#
# clear out variables that sometimes bleed into containers
# causing problems.  See for example INC000001136681...
#
for env_var in CPATH LIBRARY_PATH
do
   eval unset $env_var
done


if grep -q release.6 /etc/system-release
then
    : tokens do not work on SL6...
    unset BEARER_TOKEN_FILE
else


export BEARER_TOKEN_FILE=$PWD/.condor_creds/uboone_dd28b7e9c2.use
#export BEARER_TOKEN_FILE=$PWD/.condor_creds/uboone.use


fi

set_jobsub_debug(){
    export PS4='$LINENO:'
    set -xv
}
[[ "$JOBSUB_DEBUG" ]] && set_jobsub_debug


cleanup_condor_dirs(){
if [[ -d "$_CONDOR_JOB_IWD" ]]; then
   find $_CONDOR_JOB_IWD -mindepth 1 -maxdepth 1 -type d -exec rm -rf {} \;
fi
}

is_set() {
  [ "$1" != "" ]
  RSLT=$?
  return $RSLT
}

get_log_sizes() {
    total=$JOBSUB_MAX_JOBLOG_SIZE
    head=$JOBSUB_MAX_JOBLOG_HEAD_SIZE
    tail=$JOBSUB_MAX_JOBLOG_TAIL_SIZE

    if (( is_set $head) && ( is_set $tail )); then
         total=$(($head + $tail))
    elif ( is_set $total ); then
            if ((  is_set $head ) && (($total > $head))); then
                tail=$(($total - $head))
                total=$((head + tail))
            elif ((  is_set $tail ) && (($total > $tail))); then
                head=$(($total - $tail))
                total=$((head + tail))
            else
                head=$(( $total / 5 ))
                tail=$(( 4 * $total / 5))
            fi
    else
        total=5000000
        head=1000000
        tail=4000000
    fi
    export JOBSUB_MAX_JOBLOG_SIZE=$total
    export JOBSUB_MAX_JOBLOG_HEAD_SIZE=$head
    export JOBSUB_MAX_JOBLOG_TAIL_SIZE=$tail

}

jobsub_truncate() {
    get_log_sizes
    JOBSUB_LOG_SIZE=`wc -c $1 | awk '{print $1}'`
    if ( ! is_set $JSB_TMP );then
            export JSB_TMP=/tmp/$$
        mkdir -p $JSB_TMP
    fi
    JSB_OUT=$1.truncated
    if [ $JOBSUB_LOG_SIZE -gt $JOBSUB_MAX_JOBLOG_SIZE ]; then
        head -c $JOBSUB_MAX_JOBLOG_HEAD_SIZE $1 > $JSB_OUT
        echo "
jobsub:---- truncated after $JOBSUB_MAX_JOBLOG_HEAD_SIZE bytes--
" >>$JSB_OUT
        echo "
jobsub:---- resumed for last $JOBSUB_MAX_JOBLOG_TAIL_SIZE bytes--
" >>$JSB_OUT
        tail -c $JOBSUB_MAX_JOBLOG_TAIL_SIZE $1 >> $JSB_OUT
    else
        cp $1 $JSB_OUT
    fi
    cat $JSB_OUT
}


redirect_output_start(){
    exec 7>&1
    exec >${JSB_TMP}/JOBSUB_LOG_FILE
    exec 8>&2
    exec 2>${JSB_TMP}/JOBSUB_ERR_FILE
}

redirect_output_finish(){
    exec 1>&7 7>&-
    exec 2>&8 8>&-
    jobsub_truncate ${JSB_TMP}/JOBSUB_ERR_FILE 1>&2
    jobsub_truncate ${JSB_TMP}/JOBSUB_LOG_FILE
    
    
    IFDH_CP_MAXRETRIES=1 ${JSB_TMP}/ifdh.sh cp ${JSB_TMP}/JOBSUB_ERR_FILE.truncated https://fndcadoor.fnal.gov:2880/fermigrid/jobsub/jobs/2023_06_19/0c7d2d0b-cafc-4bb1-b0cc-267465898d9b/gen-make_kaon_events_numi_fhc_run1_assok_overlay_deftest2-v08_00_00_51.sh2023_06_19_0914000c7d2d0b-cafc-4bb1-b0cc-267465898d9bcluster.$CLUSTER.$PROCESS.err
    IFDH_CP_MAXRETRIES=1 ${JSB_TMP}/ifdh.sh cp ${JSB_TMP}/JOBSUB_LOG_FILE.truncated https://fndcadoor.fnal.gov:2880/fermigrid/jobsub/jobs/2023_06_19/0c7d2d0b-cafc-4bb1-b0cc-267465898d9b/gen-make_kaon_events_numi_fhc_run1_assok_overlay_deftest2-v08_00_00_51.sh2023_06_19_0914000c7d2d0b-cafc-4bb1-b0cc-267465898d9bcluster.$CLUSTER.$PROCESS.out
    
}


normal_exit(){
    redirect_output_finish

    # maybe don't cleanup so we can transfer files back...
    #cleanup_condor_dirs
}

signal_exit(){
    echo "$@ "
    echo "$@ " 1>&2
    exit 255
}


trap normal_exit EXIT
trap "signal_exit received signal TERM"  TERM
trap "signal_exit received signal KILL" KILL
trap "signal_exit received signal ABRT" ABRT
trap "signal_exit received signal QUIT" QUIT
trap "signal_exit received signal ALRM" ALRM
trap "signal_exit received signal INT" INT
trap "signal_exit received signal BUS" BUS
trap "signal_exit received signal PIPE" PIPE



setup_ifdh_env(){
#
# create ifdh.sh which runs
# ifdh in a seperate environment to
# keep it from interfering with users ifdh set up
#
cat << '_HEREDOC_' > ${JSB_TMP}/ifdh.sh
#!/bin/sh
#
which ifdh > /dev/null 2>&1
has_ifdh=$?
if [ "$has_ifdh" -ne "0" ] ; then
    unset PRODUCTS
    for setup_file in /cvmfs/fermilab.opensciencegrid.org/products/common/etc/setups /grid/fermiapp/products/common/etc/setups.sh /fnal/ups/etc/setups.sh ; do
      if [ -e "$setup_file" ] && [ "$has_ifdh" -ne "0" ]; then
         source $setup_file
         ups exist ifdhc $IFDH_VERSION
         has_ifdh=$?
         if [ "$has_ifdh" = "0" ] ; then
             setup ifdhc $IFDH_VERSION
             break
         else
            unset PRODUCTS
         fi
     fi
   done
fi
which ifdh > /dev/null 2>&1
if [ "$?" -ne "0" ] ; then
    echo "Can not find ifdh version $IFDH_VERSION ,exiting!"
    echo "Can not find ifdh version $IFDH_VERSION ,exiting! ">&2
    exit 1
else
    ifdh "$@"
    exit $?
fi
_HEREDOC_
chmod +x ${JSB_TMP}/ifdh.sh
}


#############################################################
# main ()                                                     #
###############################################################
touch .empty_file
# Hold and clear arg list
args="$@"
set - ""
[[ "$JOBSUB_DEBUG" ]] && set_jobsub_debug

export JSB_TMP=$_CONDOR_SCRATCH_DIR/jsb_tmp
mkdir -p $JSB_TMP
export _CONDOR_SCRATCH_DIR=$_CONDOR_SCRATCH_DIR/no_xfer
export TMP=$_CONDOR_SCRATCH_DIR
export TEMP=$_CONDOR_SCRATCH_DIR
export TMPDIR=$_CONDOR_SCRATCH_DIR
mkdir -p $_CONDOR_SCRATCH_DIR
export CONDOR_DIR_INPUT=${_CONDOR_SCRATCH_DIR}/${PROCESS}/TRANSFERRED_INPUT_FILES
mkdir -p $CONDOR_DIR_INPUT
redirect_output_start

setup_ifdh_env
export PATH="${PATH}:."

# -f files for input


# --tar_file_name for input

  
    # RCDS unpacked tarfile
    # Save tfname into a list in case we couldn't get the exact path, like if user skipped the RCDS upload check
    tfnamelist=(/cvmfs/fifeuser4.opensciencegrid.org/sw/uboone/4ca9482ebeda9320c89e7de3d8ac79634322ec00a5653f9a606f4126b3bb968e)

    # Given 40 tries, with a sleep of 30 seconds, we retry for a maximum of around 20 minutes PER item in tfnamelist
    num_tries=0
    max_tries=40
    slp=30

    # wait for tarfile to show up
    while [[ ${num_tries} -lt ${max_tries} ]]; do
      num_tries=$(($num_tries + 1))
      tfnamelist=( `shuf -e "${tfnamelist[@]}"` ) # Shuffle our list
      for candidate_tfname in ${tfnamelist[@]}; do
        echo "Looking for directory ${candidate_tfname} on RCDS.  Try ${num_tries} of ${max_tries}"
        if test -d "${candidate_tfname}" ; then
          # found the tarfile.  Set the environment variables
          echo "Found file ${candidate_tfname} on RCDS.  Setting environment variables and links in job."
          
            INPUT_TAR_DIR_LOCAL=${candidate_tfname}
            export INPUT_TAR_DIR_LOCAL
            # Note: this filename doesn't exist, but if you take dirname
            #       of it you find the contents
            INPUT_TAR_FILE=${candidate_tfname}/workd97470c1-f734-4789-9b5d-b4ac5f5c7b42.tar
            export INPUT_TAR_FILE
            ln -s ${candidate_tfname} ${CONDOR_DIR_INPUT}/workd97470c1-f734-4789-9b5d-b4ac5f5c7b42
            break 2 # Break out of both candidate_tfname and retry loop
          
        fi
      done
      if [[ $num_tries -eq $max_tries ]] ; then
        echo "Max retries ${num_tries} exceeded to find ${candidate_tfname}.  Exiting."
        exit 1 # Fail the job right here
      fi
      sleep $slp
    done
  


# -d directories for output


# ==========

  # Generic Preamble
  
  
  


# ==========


export JOBSUB_EXE_SCRIPT=$(ls gen-make_kaon_events_numi_fhc_run1_assok_overlay_deftest2-v08_00_00_51.sh 2>/dev/null)
if [ "$JOBSUB_EXE_SCRIPT" = "" ]; then
     export JOBSUB_EXE_SCRIPT=$(find . -name gen-make_kaon_events_numi_fhc_run1_assok_overlay_deftest2-v08_00_00_51.sh -print | head -1)
fi
chmod +x $JOBSUB_EXE_SCRIPT
${JSB_TMP}/ifdh.sh log "mengel:$JOBSUBJOBID BEGIN EXECUTION $JOBSUB_EXE_SCRIPT   --nfile 1  --group uboone  -g  -c wrapper.fcl  --ups uboonecode  -r v08_00_00_51  -b e17:prof  --localtar /pnfs/uboone/resilient/users/taniuchi/KaonProduction/tarballs/Kaon_v08_00_00_51.tar  --workdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/workdir  --outdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/outdir  --logdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/logdir  --os SL7  -n 2000  --njobs 10 --data_file_type root  --output make_kaon_events_numi_fhc_run1_assok_overlay_deftest2_${PROCESS}_%tc_g4.root  --init /cvmfs/uboone.opensciencegrid.org/products/setup_uboone.sh  --validate  --declare  --copy "

export NODE_NAME=`hostname`
export BOGOMIPS=`grep bogomips /proc/cpuinfo | tail -1 | cut -d ' ' -f2`
export VENDOR_ID=`grep vendor_id /proc/cpuinfo | tail -1 | cut -d ' ' -f2`
export poms_data='{"campaign_id":"'$CAMPAIGN_ID'","task_definition_id":"'$TASK_DEFINITION_ID'","task_id":"'$POMS_TASK_ID'","job_id":"'$POMS_JOB_ID'","batch_id":"'$JOBSUBJOBID'","host_site":"'$HOST_SITE'","bogomips":"'$BOGOMIPS'","node_name":"'$NODE_NAME'","vendor_id":"'$VENDOR_ID'"}'

${JSB_TMP}/ifdh.sh log poms_data=$poms_data
echo `date` $JOBSUBJOBID BEGIN EXECUTION $JOBSUB_EXE_SCRIPT --nfile 1  --group uboone  -g  -c wrapper.fcl  --ups uboonecode  -r v08_00_00_51  -b e17:prof  --localtar /pnfs/uboone/resilient/users/taniuchi/KaonProduction/tarballs/Kaon_v08_00_00_51.tar  --workdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/workdir  --outdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/outdir  --logdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/logdir  --os SL7  -n 2000  --njobs 10 --data_file_type root  --output make_kaon_events_numi_fhc_run1_assok_overlay_deftest2_${PROCESS}_%tc_g4.root  --init /cvmfs/uboone.opensciencegrid.org/products/setup_uboone.sh  --validate  --declare  --copy >&2
echo `date` $JOBSUBJOBID BEGIN EXECUTION $JOBSUB_EXE_SCRIPT --nfile 1  --group uboone  -g  -c wrapper.fcl  --ups uboonecode  -r v08_00_00_51  -b e17:prof  --localtar /pnfs/uboone/resilient/users/taniuchi/KaonProduction/tarballs/Kaon_v08_00_00_51.tar  --workdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/workdir  --outdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/outdir  --logdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/logdir  --os SL7  -n 2000  --njobs 10 --data_file_type root  --output make_kaon_events_numi_fhc_run1_assok_overlay_deftest2_${PROCESS}_%tc_g4.root  --init /cvmfs/uboone.opensciencegrid.org/products/setup_uboone.sh  --validate  --declare  --copy

 $JOBSUB_EXE_SCRIPT --nfile 1  --group uboone  -g  -c wrapper.fcl  --ups uboonecode  -r v08_00_00_51  -b e17:prof  --localtar /pnfs/uboone/resilient/users/taniuchi/KaonProduction/tarballs/Kaon_v08_00_00_51.tar  --workdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/workdir  --outdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/outdir  --logdir /pnfs/uboone/scratch/users/taniuchi/v08_00_00_51/make_kaon_events_numi_fhc_run1_assok_overlay_deftest2/full_overlay/gen/logdir  --os SL7  -n 2000  --njobs 10 --data_file_type root  --output make_kaon_events_numi_fhc_run1_assok_overlay_deftest2_${PROCESS}_%tc_g4.root  --init /cvmfs/uboone.opensciencegrid.org/products/setup_uboone.sh  --validate  --declare  --copy 
JOB_RET_STATUS=$?

# copy out job log file


# copy out -d directories


echo `date` $JOBSUB_EXE_SCRIPT COMPLETED with exit status $JOB_RET_STATUS
echo `date` $JOBSUB_EXE_SCRIPT COMPLETED with exit status $JOB_RET_STATUS 1>&2
${JSB_TMP}/ifdh.sh log "$JOBSUBJOBID taniuchi:gen-make_kaon_events_numi_fhc_run1_assok_overlay_deftest2-v08_00_00_51.sh COMPLETED with return code $JOB_RET_STATUS"
exit $JOB_RET_STATUS